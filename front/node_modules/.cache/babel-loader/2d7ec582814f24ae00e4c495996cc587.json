{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\for_sell\\\\sofa\\\\front\\\\src\\\\login.js\";\nimport React from 'react';\nimport Place from \"./Place\";\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      place: null,\n      service: null,\n      worker: null,\n      isLoadedPlace: 0,\n      isLoadedService: 0,\n      isLoadedeWorker: 0\n    };\n  }\n\n  render() {\n    let style = {};\n\n    let getParamsFromString = () => {\n      let search = window.location.search.replace(\"?\", \"\");\n      search = search.split(\"&\");\n      let ret = {};\n      let fParam = search[0];\n      let sParam = search[1];\n      let tParam = search[2];\n      ret[fParam.split(\"=\")[0]] = +fParam.split(\"=\")[1];\n      ret[sParam.split(\"=\")[0]] = +sParam.split(\"=\")[1];\n      ret[tParam.split(\"=\")[0]] = +tParam.split(\"=\")[1];\n      return ret;\n    };\n\n    let registr = (wID, sID, pID, duration) => {\n      let name = document.getElementById(\"name\").value;\n      let phone = document.getElementById(\"phone\").value;\n      let id = new Date() / 1;\n      let startTime = new Date(document.getElementById(\"data_input\").value) / 1000;\n      console.log(startTime);\n      fetch(\"http://localhost:3001/customRequest/\" + `INSERT INTO clients (id, name, phone) values (${id}, '${name}', ${phone})`);\n      fetch(\"http://localhost:3001/customRequest/\" + `INSERT INTO schedule (workerId, clientId, serviceId, placeId, startAt, endAt) \n                values (${wID}, ${id},${sID},${pID}, ${startTime}, ${startTime + duration})`);\n      console.log(this.state.service);\n    };\n\n    console.log(getParamsFromString());\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u043E\\u043D\\u043D\\u044B\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\u0418\\u043C\\u044F\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            id: \"phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043E \\u0437\\u0430\\u043A\\u0430\\u0437\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), (() => {\n            if (this.state.isLoadedeWorker * this.state.isLoadedPlace * this.state.isLoadedService) {\n              let place = this.state.place[0];\n              let service = this.state.service[0];\n              let worker = this.state.worker[0];\n              console.log(this.state);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"\\u0422\\u0438\\u043F \\u0443\\u0441\\u043B\\u0443\\u0433\\u0438: \", service.type]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0443\\u0441\\u043B\\u0443\\u0433\\u0438: \", service.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u0443\\u0441\\u043B\\u0443\\u0433\\u0438: \", service.description]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C \\u0443\\u0441\\u043B\\u0443\\u0433\\u0438: \", service.duration / 60, \" \\u043C\\u0438\\u043D\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"\\u0424\\u0418\\u041E \\u0438\\u0441\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044F: \", worker.wname]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430 \\u0438\\u0441\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044F: \", worker.phone]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u043F\\u0443\\u043D\\u043A\\u0442\\u0430 \\u043F\\u0440\\u043E\\u0432\\u0435\\u0434\\u0435\\u043D\\u0438\\u044F: \", place.address]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 40\n              }, this);\n            } else {\n              let condition = this.props.location.search;\n              condition = condition.replace(\"?\", \"\");\n              if (this.state.place === null) fetch(\"http://localhost:3001/customRequest/Select%20*%20from%20places\" + \" where id=\" + getParamsFromString().placeID).then(response => {\n                response.json().then(json => {\n                  let newState = {};\n                  newState.place = json;\n                  newState.isLoadedPlace = 1;\n                  this.setState(newState);\n                }, reason => {});\n              }, reject => {\n                console.log(reject);\n              });\n              if (this.state.worker === null) fetch(\"http://localhost:3001/customRequest/Select%20*%20from%20workers\" + \" where id=\" + getParamsFromString().workerID).then(response => {\n                response.json().then(json => {\n                  let newState = {};\n                  newState.worker = json;\n                  newState.isLoadedeWorker = 1;\n                  this.setState(newState);\n                }, reason => {});\n              }, reject => {\n                console.log(reject);\n              });\n              if (this.state.service === null) fetch(\"http://localhost:3001/customRequest/Select%20*%20from%20services\" + \" where sid=\" + getParamsFromString().serviceID).then(response => {\n                response.json().then(json => {\n                  let newState = {};\n                  newState.service = json;\n                  newState.isLoadedService = 1;\n                  this.setState(newState);\n                }, reason => {});\n              }, reject => {\n                console.log(reject);\n              });\n              return \"Loading...\";\n            }\n          })(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u0414\\u0430\\u0442\\u0430 \\u0438 \\u0432\\u0440\\u0435\\u043C\\u044F: (\\u0414\\u0414:\\u041C\\u041C:\\u0413\\u0413\\u0413\\u0413 \\u0427\\u0427:\\u041C\\u041C)\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"data_input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  registr(this.state.worker.id, this.state.service.sid, this.state.place.id, this.state.service.duration);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/User/Desktop/for_sell/sofa/front/src/login.js"],"names":["React","Place","Login","Component","constructor","state","place","service","worker","isLoadedPlace","isLoadedService","isLoadedeWorker","render","style","getParamsFromString","search","window","location","replace","split","ret","fParam","sParam","tParam","registr","wID","sID","pID","duration","name","document","getElementById","value","phone","id","Date","startTime","console","log","fetch","type","description","wname","address","condition","props","placeID","then","response","json","newState","setState","reason","reject","workerID","serviceID","sid"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Place from \"./Place\";\r\nclass Login extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            place: null,\r\n            service: null,\r\n            worker: null,\r\n            isLoadedPlace: 0,\r\n            isLoadedService:0,\r\n            isLoadedeWorker: 0\r\n        }\r\n    }\r\n    render() {\r\n        let style = {\r\n\r\n        }\r\n        let getParamsFromString = ()=>{\r\n            let search = window.location.search.replace(\"?\", \"\");\r\n            search = search.split(\"&\");\r\n            let ret = {}\r\n            let fParam = search[0];\r\n            let sParam = search[1];\r\n            let tParam = search[2];\r\n            ret[fParam.split(\"=\")[0]]=(+fParam.split(\"=\")[1]);\r\n            ret[sParam.split(\"=\")[0]]=(+sParam.split(\"=\")[1]);\r\n            ret[tParam.split(\"=\")[0]]=(+tParam.split(\"=\")[1]);\r\n            return ret;\r\n        }\r\n        let registr = (wID, sID, pID, duration)=>{\r\n           let name = document.getElementById(\"name\").value\r\n            let phone = document.getElementById(\"phone\").value;\r\n           let id = new Date()/1;\r\n           let startTime = new Date(document.getElementById(\"data_input\").value)/1000\r\n            console.log(startTime)\r\n            fetch(\"http://localhost:3001/customRequest/\" +\r\n                `INSERT INTO clients (id, name, phone) values (${id}, '${name}', ${phone})`)\r\n            fetch(\"http://localhost:3001/customRequest/\" +\r\n                `INSERT INTO schedule (workerId, clientId, serviceId, placeId, startAt, endAt) \r\n                values (${wID}, ${id},${sID},${pID}, ${startTime}, ${startTime+duration})`)\r\n            console.log(this.state.service)\r\n\r\n        }\r\n        console.log(getParamsFromString())\r\n        return (\r\n            <div>\r\n                <div style={style}>\r\n                    <div>Введите регистрационные данные: </div>\r\n                    <div>\r\n                        Имя<br/>\r\n                        <input type=\"text\" id=\"name\" />\r\n                        <br/>\r\n                        Номер телефона\r\n                        <br/>\r\n                        <input type=\"tel\" id=\"phone\"/>\r\n                    </div>\r\n                    <div>\r\n                        <br/><br/>\r\n                        <div>\r\n                            Данные о заказе\r\n                        </div>\r\n                        {(()=>{\r\n                            if (this.state.isLoadedeWorker*this.state.isLoadedPlace*this.state.isLoadedService)\r\n                            {\r\n                                let place = this.state.place[0];\r\n                                let service = this.state.service[0];\r\n                                let worker  = this.state.worker[0];\r\n                                console.log(this.state)\r\n                                return <div>\r\n                                    <div>Тип услуги: {service.type}</div>\r\n                                    <div>Название услуги: {service.name}</div>\r\n                                    <div>Описание услуги: {service.description}</div>\r\n                                    <div>Продолжительность услуги: {service.duration/60} мин</div>\r\n                                    <div>ФИО исполнителя: {worker.wname}</div>\r\n                                    <div>Номер телефона исполнителя: {worker.phone}</div>\r\n                                    <div>Адрес пункта проведения: {place.address}</div>\r\n                                </div>\r\n                            }\r\n                            else {\r\n                                let condition = this.props.location.search;\r\n                                condition = condition.replace(\"?\", \"\");\r\n\r\n                                if (this.state.place === null)\r\n                                    fetch(\"http://localhost:3001/customRequest/Select%20*%20from%20places\" +\r\n                                        \" where id=\"+getParamsFromString().placeID).then(\r\n                                        (response)=>{\r\n                                            response.json().then(\r\n                                                (json)=>{\r\n                                                    let newState = {};\r\n                                                    newState.place = json;\r\n                                                    newState.isLoadedPlace = 1;\r\n                                                    this.setState(newState);\r\n                                                },\r\n                                                reason => {\r\n\r\n                                                }\r\n                                            )\r\n                                        },\r\n                                        (reject)=>{\r\n                                            console.log(reject)\r\n                                        }\r\n                                    )\r\n                                if (this.state.worker === null)\r\n                                    fetch(\"http://localhost:3001/customRequest/Select%20*%20from%20workers\" +\r\n                                        \" where id=\"+getParamsFromString().workerID).then(\r\n                                        (response)=>{\r\n                                            response.json().then(\r\n                                                (json)=>{\r\n                                                    let newState = {};\r\n                                                    newState.worker = json;\r\n                                                    newState.isLoadedeWorker = 1;\r\n                                                    this.setState(newState);\r\n                                                },\r\n                                                reason => {\r\n\r\n                                                }\r\n                                            )\r\n                                        },\r\n                                        (reject)=>{\r\n                                            console.log(reject)\r\n                                        }\r\n                                    )\r\n                                if (this.state.service === null)\r\n                                    fetch(\"http://localhost:3001/customRequest/Select%20*%20from%20services\" +\r\n                                        \" where sid=\"+getParamsFromString().serviceID).then(\r\n                                        (response)=>{\r\n                                            response.json().then(\r\n                                                (json)=>{\r\n                                                    let newState = {};\r\n                                                    newState.service = json;\r\n                                                    newState.isLoadedService = 1;\r\n                                                    this.setState(newState);\r\n                                                },\r\n                                                reason => {\r\n\r\n                                                }\r\n                                            )\r\n                                        },\r\n                                        (reject)=>{\r\n                                            console.log(reject)\r\n                                        }\r\n                                    )\r\n                                return \"Loading...\"\r\n                            }\r\n\r\n                        })()}\r\n                        <br/>\r\n\r\n                        <div>\r\n                            Дата и время: (ДД:ММ:ГГГГ ЧЧ:ММ)\r\n                            <input type={\"text\"} id={\"data_input\"}/>\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                <button onClick={()=>{registr(this.state.worker.id, this.state.service.sid,\r\n                                    this.state.place.id, this.state.service.duration)}}>\r\n                                    <a>\r\n                                        Подтвердить\r\n                                    </a>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Login"]},"metadata":{},"sourceType":"module"}