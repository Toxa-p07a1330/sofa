{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\for_sell\\\\sofa\\\\front\\\\src\\\\Clients.js\";\nimport React from 'react';\n\nclass Clients extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoaded: false,\n      data: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: (() => {\n        if (!this.state.isLoaded) {\n          let condition = this.props.location.search;\n          condition = condition.replace(\"?\", \"\");\n          let stringToFetch = \"http://localhost:3001/customRequest/Select%20*%20from%20clients\";\n          if (condition) stringToFetch = \"http://localhost:3001/customRequest/\" + condition;\n          fetch(stringToFetch).then(response => {\n            response.json().then(json => {\n              let newState = {};\n              newState.data = json;\n              newState.isLoaded = true;\n              this.setState(newState);\n              console.log(newState);\n            }, reason => {});\n          }, reject => {\n            console.log(reject);\n          });\n          return \"Loading...\";\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.data.map(value => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: value.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 40\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 32\n          }, this);\n        }\n      })()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Clients;","map":{"version":3,"sources":["C:/Users/User/Desktop/for_sell/sofa/front/src/Clients.js"],"names":["React","Clients","Component","constructor","state","isLoaded","data","render","condition","props","location","search","replace","stringToFetch","fetch","then","response","json","newState","setState","console","log","reason","reject","map","value","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,OAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAsC;AAClCC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,KADD;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIH;;AACDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,gBACK,CAAC,MAAI;AACF,YAAI,CAAC,KAAKH,KAAL,CAAWC,QAAhB,EACA;AACI,cAAIG,SAAS,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAApC;AACAH,UAAAA,SAAS,GAAGA,SAAS,CAACI,OAAV,CAAkB,GAAlB,EAAuB,EAAvB,CAAZ;AACA,cAAIC,aAAa,GAAG,iEAApB;AACA,cAAIL,SAAJ,EACIK,aAAa,GAAG,yCAAyCL,SAAzD;AACJM,UAAAA,KAAK,CAACD,aAAD,CAAL,CAAqBE,IAArB,CACKC,QAAD,IAAY;AACRA,YAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CACKE,IAAD,IAAQ;AACJ,kBAAIC,QAAQ,GAAG,EAAf;AACAA,cAAAA,QAAQ,CAACZ,IAAT,GAAgBW,IAAhB;AACAC,cAAAA,QAAQ,CAACb,QAAT,GAAoB,IAApB;AACA,mBAAKc,QAAL,CAAcD,QAAd;AACAE,cAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACH,aAPL,EAQII,MAAM,IAAI,CAET,CAVL;AAYH,WAdL,EAeKC,MAAD,IAAU;AACNH,YAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACH,WAjBL;AAmBA,iBAAO,YAAP;AACH,SA3BD,MA4BK;AACD,8BAAO;AAAA,sBACF,KAAKnB,KAAL,CAAWE,IAAX,CAAgBkB,GAAhB,CAAqBC,KAAD,IAAS;AAC1B,kCAAO;AAAA,0BAAMA,KAAK,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,aAFA;AADE;AAAA;AAAA;AAAA;AAAA,kBAAP;AAKH;AAEJ,OArCA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AA0CH;;AAnDiC;;AAqDtC,eAAezB,OAAf","sourcesContent":["import React from 'react'\r\nclass Clients extends  React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isLoaded: false,\r\n            data: []\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                {(()=>{\r\n                    if (!this.state.isLoaded)\r\n                    {\r\n                        let condition = this.props.location.search;\r\n                        condition = condition.replace(\"?\", \"\");\r\n                        let stringToFetch = \"http://localhost:3001/customRequest/Select%20*%20from%20clients\"\r\n                        if (condition)\r\n                            stringToFetch = \"http://localhost:3001/customRequest/\" + condition;\r\n                        fetch(stringToFetch).then(\r\n                            (response)=>{\r\n                                response.json().then(\r\n                                    (json)=>{\r\n                                        let newState = {};\r\n                                        newState.data = json;\r\n                                        newState.isLoaded = true;\r\n                                        this.setState(newState);\r\n                                        console.log(newState)\r\n                                    },\r\n                                    reason => {\r\n\r\n                                    }\r\n                                )\r\n                            },\r\n                            (reject)=>{\r\n                                console.log(reject)\r\n                            }\r\n                        )\r\n                        return \"Loading...\"\r\n                    }\r\n                    else {\r\n                        return <div>\r\n                            {this.state.data.map((value)=>{\r\n                                return <div>{value.name}</div>\r\n                            })}\r\n                        </div>\r\n                    }\r\n\r\n                })()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Clients"]},"metadata":{},"sourceType":"module"}